Project schedule:
Week 1 and 2:

-Getting familiar with Python and coding for connecting to an email account (using IMAP) and examines every message in every folder.
Telify:Telify recognizes phone numbers on web pages or in email messages and converts them into clickable links. 
This works with many CTI applications, SIP clients, Skype, Netmeeting, snom phones, the AGFEO TK-Suite client, SerVonic IXI-PCS and others.
In general, all telephony software, devices or interfaces which can be controlled by using a URL, will most likely enable you to call a phone number directly from your browser or email client.

-Writing a basic Python script to look at the "To", "From" and "CC" headers of every email message in the folder. Identifying all the names and email addresses and writing them in a CSV file.

-Scanning the body of each message looking for phone numbers.(for messages in plain text format)

-Cleaning up the phone numbers and write them in international format and putting those in the CSV file too.

import imaplib
import email

mail = imaplib.IMAP4_SSL('imap.gmail.com')
try:
    mail.login('jaminy1234@gmail.com', getpass.getpass())
except imaplib.IMAP4.error:
    print "LOGIN FAILED!!! "

rv, mailboxes = M.list()
if rv == 'OK':
    print "Mailboxes:"
    print mailboxes
mail.list() #Lists the folders in the gmail
mail.select("inbox") # connect to inbox.

result, data = mail.uid('search', None, "ALL")  # search and return uids instead
latest_email_uid = data[0].split()[-1]
result, data = mail.uid('fetch', latest_email_uid, '(RFC822)')
raw_email = data[0][1]

from email.parser import Parser
parser = Parser()

emailText = raw_email
email = parser.parsestr(emailText)

print email.get('From')
print email.get('To')
print email.get('Subject')

if email.is_multipart():
    for part in email.get_payload():
        print part.get_payload()
else:
    print email.get_payload()

